{"ast":null,"code":"var _jsxFileName = \"/home/pauubach/Projects/my_portfolio/portfolio_projects/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TURNS = {\n  X: 'x',\n  O: 'o'\n};\nconst Square = _ref => {\n  let {\n    children,\n    isSelected,\n    updateBoard,\n    index\n  } = _ref;\n  const className = `square ${isSelected ? 'is-selected' : ''}`;\n  const handleClick = () => {\n    updateBoard(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleClick,\n    className: className,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = Square;\nfunction App() {\n  _s();\n  const [turn, setTurn] = useState(TURNS.X);\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [winner, setWinnter] = useState(null); //No winner, false = draw\n\n  const updateBoard = index => {\n    //To avoid updating the square all the time.\n    if (board[index]) return;\n    const newTurn = turn === TURNS.X ? TURNS.O : TURNS.X;\n    setTurn(newTurn);\n    const newBoard = [...board];\n    newBoard[index] = turn;\n    setBoard(newBoard);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic tac toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"game\",\n      children: board.map((_, index) => {\n        return /*#__PURE__*/_jsxDEV(Square, {\n          index: index,\n          updateBoard: updateBoard,\n          children: board[index]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"turn\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        isSelected: turn === TURNS.X,\n        children: TURNS.X\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        isSelected: turn === TURNS.O,\n        children: TURNS.O\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F3bfJtcvWIwN/3G78NArHLwst4E=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","TURNS","X","O","Square","_ref","children","isSelected","updateBoard","index","className","handleClick","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","turn","setTurn","board","setBoard","Array","fill","winner","setWinnter","newTurn","newBoard","map","_","_c2","$RefreshReg$"],"sources":["/home/pauubach/Projects/my_portfolio/portfolio_projects/tic-tac-toe/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nconst TURNS = {\n  X: 'x',\n  O: 'o'\n}\n\n\n\nconst Square = ({children, isSelected, updateBoard, index}) => {\n  const className=`square ${isSelected ? 'is-selected' : '' }`\n  const handleClick = () => {\n    updateBoard(index)\n  }\n  return (\n    <div onClick={handleClick} className={className}>\n      {children}\n    </div>\n  )\n}\n\nfunction App() {\n  const [turn, setTurn] = useState(TURNS.X)\n  const [board, setBoard] = useState(Array(9).fill(null))\n  const [winner, setWinnter] = useState(null) //No winner, false = draw\n\n  \n  const updateBoard = (index) => {\n    //To avoid updating the square all the time.\n    if (board[index]) return \n    \n    const newTurn = turn === TURNS.X ? TURNS.O : TURNS.X\n    setTurn(newTurn)\n    const newBoard = [...board]\n    newBoard[index] = turn\n    setBoard(newBoard)\n  }\n\n  return (\n    <main className='board'>\n      <h1>Tic tac toe</h1>\n      <section className='game'>\n          {board.map((_, index) => {\n            return (\n              <Square \n                key={index}\n                index={index}\n                updateBoard={updateBoard}\n                >\n                  {board[index]}\n                </Square>\n                           )\n          })}\n      </section>\n      <section className='turn'>\n        <Square isSelected={turn === TURNS.X}>{TURNS.X}</Square>\n        <Square isSelected={turn === TURNS.O}>{TURNS.O}</Square>\n      </section>\n  </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}