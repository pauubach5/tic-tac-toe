{"ast":null,"code":"import { WINNER_COMBOS } from \"../constants\";\nexport const checkWinner = boardToCheck => {\n  for (const combo of WINNER_COMBOS) {\n    const [a, b, c] = combo;\n    if (boardToCheck[a] && boardToCheck[b] === boardToCheck[a] && boardToCheck[c] === boardToCheck[a]) {\n      return boardToCheck[a];\n    }\n  }\n  return null;\n};","map":{"version":3,"names":["WINNER_COMBOS","checkWinner","boardToCheck","combo","a","b","c"],"sources":["/home/pauubach/Projects/my_portfolio/portfolio_projects/tic-tac-toe/src/logic/board.js"],"sourcesContent":["import { WINNER_COMBOS } from \"../constants\"\n\nexport const checkWinner = (boardToCheck) => {\n  for (const combo of WINNER_COMBOS) {\n    const [a, b, c] = combo\n    if (\n      boardToCheck[a] &&\n      boardToCheck[b] === boardToCheck[a] &&\n      boardToCheck[c] === boardToCheck[a]\n    ) {\n      return boardToCheck[a]\n    }\n  }\n  return null\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAE5C,OAAO,MAAMC,WAAW,GAAIC,YAAY,IAAK;EAC3C,KAAK,MAAMC,KAAK,IAAIH,aAAa,EAAE;IACjC,MAAM,CAACI,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGH,KAAK;IACvB,IACED,YAAY,CAACE,CAAC,CAAC,IACfF,YAAY,CAACG,CAAC,CAAC,KAAKH,YAAY,CAACE,CAAC,CAAC,IACnCF,YAAY,CAACI,CAAC,CAAC,KAAKJ,YAAY,CAACE,CAAC,CAAC,EACnC;MACA,OAAOF,YAAY,CAACE,CAAC,CAAC;IACxB;EACF;EACA,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}