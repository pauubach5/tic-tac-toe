{"ast":null,"code":"var _jsxFileName = \"/home/pauubach/Projects/my_portfolio/portfolio_projects/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport confetti from 'canvas-confetti';\nimport { Square } from './components/Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TURNS = {\n  X: 'x',\n  O: 'o'\n};\nconst WINNER_COMBOS = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\nconst checkWinner = boardToCheck => {\n  for (const combo of WINNER_COMBOS) {\n    const [a, b, c] = combo;\n    if (boardToCheck[a] && boardToCheck[b] === boardToCheck[a] && boardToCheck[c] === boardToCheck[a]) {\n      return boardToCheck[a];\n    }\n  }\n  return null;\n};\nfunction App() {\n  _s();\n  const [turn, setTurn] = useState(TURNS.X);\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [winner, setWinner] = useState(null); //No winner, false = draw\n\n  const updateBoard = index => {\n    //To avoid updating the square all the time.\n    if (board[index] || winner) return;\n    const newTurn = turn === TURNS.X ? TURNS.O : TURNS.X;\n    setTurn(newTurn);\n    const newBoard = [...board];\n    newBoard[index] = turn;\n    setBoard(newBoard);\n    const newWinner = checkWinner(newBoard);\n    if (newWinner) {\n      confetti();\n      setWinner(newWinner);\n    } else if (!newBoard.includes(null)) {\n      setWinner(false);\n    }\n  };\n  const restartGame = () => {\n    setTurn(TURNS.X);\n    setBoard(Array(9).fill(null));\n    setWinner(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic tac toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restartGame,\n      children: \"Restart Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"game\",\n      children: board.map((square, index) => {\n        return /*#__PURE__*/_jsxDEV(Square, {\n          index: index,\n          updateBoard: updateBoard,\n          children: square\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"turn\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        isSelected: turn === TURNS.X,\n        children: TURNS.X\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        isSelected: turn === TURNS.O,\n        children: TURNS.O\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), winner !== null && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"winner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: winner === false ? 'Draw' : 'The winner is: '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"win\",\n          children: winner && /*#__PURE__*/_jsxDEV(Square, {\n            children: winner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: restartGame,\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RTOCPV5jDiZBZ/mGtzSO0FGtv+M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","confetti","Square","jsxDEV","_jsxDEV","TURNS","X","O","WINNER_COMBOS","checkWinner","boardToCheck","combo","a","b","c","App","_s","turn","setTurn","board","setBoard","Array","fill","winner","setWinner","updateBoard","index","newTurn","newBoard","newWinner","includes","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","square","isSelected","_c","$RefreshReg$"],"sources":["/home/pauubach/Projects/my_portfolio/portfolio_projects/tic-tac-toe/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport confetti from 'canvas-confetti';\nimport { Square } from './components/Square';\n\nconst TURNS = {\n  X: 'x',\n  O: 'o'\n}\n\nconst WINNER_COMBOS = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n]\n\nconst checkWinner = (boardToCheck) => {\n  for (const combo of WINNER_COMBOS) {\n    const [a, b, c] = combo\n    if (\n      boardToCheck[a] &&\n      boardToCheck[b] === boardToCheck[a] &&\n      boardToCheck[c] === boardToCheck[a]\n    ) {\n      return boardToCheck[a]\n    }\n  }\n  return null\n}\n\n\nfunction App() {\n  const [turn, setTurn] = useState(TURNS.X)\n  const [board, setBoard] = useState(Array(9).fill(null))\n  const [winner, setWinner] = useState(null) //No winner, false = draw\n\n  \n  const updateBoard = (index) => {\n    //To avoid updating the square all the time.\n    if (board[index] || winner) return\n    \n    const newTurn = turn === TURNS.X ? TURNS.O : TURNS.X\n    setTurn(newTurn)\n    const newBoard = [...board]\n    newBoard[index] = turn\n    setBoard(newBoard)\n\n    const newWinner = checkWinner(newBoard)\n    if (newWinner) {\n      confetti()\n      setWinner(newWinner)\n    } else if (!newBoard.includes(null)) {\n      setWinner(false)\n    }\n  }\n\n  const restartGame = () => {\n    setTurn(TURNS.X)\n    setBoard(Array(9).fill(null))\n    setWinner(null)\n  }\n\n  return (\n    <main className='board'>\n      <h1>Tic tac toe</h1>\n      <button onClick={restartGame}>Restart Game</button>\n      <section className='game'>\n          {board.map((square, index) => {\n            return (\n              <Square \n                key={index}\n                index={index}\n                updateBoard={updateBoard}\n                >\n                  {square }\n                </Square>\n            )\n          })}\n      </section>\n      <section className='turn'>\n        <Square isSelected={turn === TURNS.X}>{TURNS.X}</Square>\n        <Square isSelected={turn === TURNS.O}>{TURNS.O}</Square>\n      </section>\n\n      {winner !== null && (\n        <section className='winner'>\n          <div className='text'>\n            <h2>\n              {\n                winner === false ? 'Draw' : 'The winner is: '\n              } \n            </h2>\n\n            <header className='win'>\n              {winner && <Square>{winner}</Square>}\n            </header>\n\n            <footer>\n              <button onClick={restartGame}>Play Again</button>\n            </footer>\n          </div>\n        </section>\n      )\n    }   \n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}