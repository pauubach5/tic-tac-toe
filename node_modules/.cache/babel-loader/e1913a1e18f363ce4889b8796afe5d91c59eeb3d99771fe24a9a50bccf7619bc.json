{"ast":null,"code":"import _toConsumableArray from\"/home/pauubach/Projects/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/pauubach/Projects/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import'./App.css';import confetti from'canvas-confetti';import{Square}from'./components/Square';import{TURNS}from'./constants';import{checkWinner}from'./logic/board';import WinnerModal from'./components/WinnerModal';import Board from'./components/Board';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(function(){var turnFromStorage=window.localStorage.getItem('turn');if(turnFromStorage)return turnFromStorage;return TURNS.X;}),_useState2=_slicedToArray(_useState,2),turn=_useState2[0],setTurn=_useState2[1];var _useState3=useState(function(){var boardFromStorage=window.localStorage.getItem('board');if(boardFromStorage)return JSON.parse(boardFromStorage);return Array(9).fill(null);}),_useState4=_slicedToArray(_useState3,2),board=_useState4[0],setBoard=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),winner=_useState6[0],setWinner=_useState6[1];//No winner, false = draw\nvar updateBoard=function updateBoard(index){//To avoid updating the square all the time.\nif(board[index]||winner)return;var newTurn=turn===TURNS.X?TURNS.O:TURNS.X;setTurn(newTurn);var newBoard=_toConsumableArray(board);newBoard[index]=turn;setBoard(newBoard);var newWinner=checkWinner(newBoard);if(newWinner){confetti();setWinner(newWinner);}else if(!newBoard.includes(null)){setWinner(false);}//Save the game\nwindow.localStorage.setItem('board',JSON.stringify(newBoard));window.localStorage.setItem('turn',newTurn);};var restartGame=function restartGame(){setTurn(TURNS.X);setBoard(Array(9).fill(null));setWinner(null);window.localStorage.removeItem('board');window.localStorage.removeItem('turn');};return/*#__PURE__*/_jsxs(\"main\",{className:\"board\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Tic Tac Toe\"}),/*#__PURE__*/_jsx(\"button\",{onClick:restartGame,children:\"Restart Game\"}),/*#__PURE__*/_jsx(Board,{board:board,updateBoard:updateBoard}),/*#__PURE__*/_jsxs(\"section\",{className:\"turn\",children:[/*#__PURE__*/_jsx(Square,{isSelected:turn===TURNS.X,children:TURNS.X}),/*#__PURE__*/_jsx(Square,{isSelected:turn===TURNS.O,children:TURNS.O})]}),/*#__PURE__*/_jsx(WinnerModal,{restartGame:restartGame,winner:winner})]});}export default App;","map":{"version":3,"names":["useState","confetti","Square","TURNS","checkWinner","WinnerModal","Board","jsx","_jsx","jsxs","_jsxs","App","_useState","turnFromStorage","window","localStorage","getItem","X","_useState2","_slicedToArray","turn","setTurn","_useState3","boardFromStorage","JSON","parse","Array","fill","_useState4","board","setBoard","_useState5","_useState6","winner","setWinner","updateBoard","index","newTurn","O","newBoard","_toConsumableArray","newWinner","includes","setItem","stringify","restartGame","removeItem","className","children","onClick","isSelected"],"sources":["/home/pauubach/Projects/tic-tac-toe/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport confetti from 'canvas-confetti';\nimport { Square } from './components/Square';\nimport { TURNS } from './constants';\nimport { checkWinner } from './logic/board';\nimport WinnerModal from './components/WinnerModal';\nimport Board from './components/Board';\n\nfunction App() {\n  const [turn, setTurn] = useState(() => {\n      const turnFromStorage = window.localStorage.getItem('turn')\n      \n      if (turnFromStorage) return turnFromStorage\n      return TURNS.X \n    })\n  const [board, setBoard] = useState(() => {\n    const boardFromStorage = window.localStorage.getItem('board')\n    \n    if (boardFromStorage) return JSON.parse(boardFromStorage)\n    return Array(9).fill(null)\n  })\n\n  const [winner, setWinner] = useState(null) //No winner, false = draw\n\n  const updateBoard = (index) => {\n\n    //To avoid updating the square all the time.\n    if (board[index] || winner) return\n    \n    const newTurn = turn === TURNS.X ? TURNS.O : TURNS.X\n    setTurn(newTurn)\n    const newBoard = [...board]\n    newBoard[index] = turn\n    setBoard(newBoard)\n\n    const newWinner = checkWinner(newBoard)\n    if (newWinner) {\n      confetti()\n      setWinner(newWinner)\n    } else if (!newBoard.includes(null)) {\n      setWinner(false)\n    }\n    //Save the game\n    window.localStorage.setItem('board', JSON.stringify(newBoard))\n    window.localStorage.setItem('turn', newTurn)\n  }\n  const restartGame = () => {\n    setTurn(TURNS.X)\n    setBoard(Array(9).fill(null))\n    setWinner(null)\n    window.localStorage.removeItem('board')\n    window.localStorage.removeItem('turn')\n  } \n\n  return (\n    <main className='board'>\n      <h1>Tic Tac Toe</h1>\n      <button onClick={restartGame}>Restart Game</button>\n      <Board board={board} updateBoard={updateBoard} />\n      <section className='turn'>\n        <Square isSelected={turn === TURNS.X}>{TURNS.X}</Square>\n        <Square isSelected={turn === TURNS.O}>{TURNS.O}</Square>\n      </section>\n      <WinnerModal restartGame={restartGame} winner={winner} />\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}